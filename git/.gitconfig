[user]
	name = Jonatan Ivanov
	email = jonatan.ivanov@gmail.com
	signingkey = CBA8BB62F3825028
[core]
	excludesfile = ~/.dotfiles/git/.gitignore_global
	editor = code --wait
	pager = delta
[interactive]
	diffFilter = delta --color-only
[delta]
	line-numbers = true
	# side-by-side = true
[diff]
	tool = meld
[difftool]
	prompt = false
[difftool "meld"]
	trustExitCode = true
	cmd = open -W -a Meld --args \"$LOCAL\" \"$REMOTE\"
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[difftool "sourcetree"]
	cmd = meld $LOCAL $REMOTE
	path = 
[merge]
	tool = meld
[mergetool]
	prompt = false
[mergetool "meld"]
	trustExitCode = true
	cmd = open -W -a Meld --args --auto-merge \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output=\"$MERGED\"
[mergetool "sourcetree"]
	cmd = meld $LOCAL $BASE $REMOTE
	trustExitCode = true
[pull]
	rebase = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[includeIf "gitdir:~/GitHub/"]
	path = ~/GitHub/.gitconfig
[includeIf "gitdir:~/git/"]
	path = ~/git/.gitconfig
[commit]
	template = ~/.dotfiles/git/gitmessage.txt
	gpgSign = true
[tag]
	gpgSign = true
[init]
	defaultBranch = main
[gpg]
	program = /usr/local/bin/gpg
[alias]
	mergepr = "!f() { \
		[[ -z \"$1\" ]] && { echo \"No branch specified\"; exit 1; }; \
		declare ownerrepo=$(git remote -v | grep \"$git@github\\.com:spring-[projects|cloud|io].*\\(push\\)\" | cut -f 2 | cut -c 16- | sed 's/.git (push)//' | sed 's/ (push)//'); \
		declare pullrequest=$(git log --format=%B -n 1 $1 | grep -E \"See\\ gh-([0-9]+)\" | awk '{$1=$1};1' | cut -c 8-); \
		[[ -z \"$pullrequest\" ]] && { echo \"No see reference found\"; exit 1; }; \
		declare pullauthor=$(curl -s \"https://api.github.com/repos/${ownerrepo}/pulls/${pullrequest}\" | jq -r .user.login); \
		git merge -q --no-ff --log -m \"Merge pull request #${pullrequest} from ${pullauthor}\" $1; \
		git commit -q --amend -m\"$(git log --format=%B -n1)$(echo \"\\n\\nCloses gh-${pullrequest}\")\"; \
		echo \"Merged PR #${pullrequest} in ${ownerrepo} from ${pullauthor}\"; \
	}; f"
	polish = "!f() { \
		declare issue=$(git log --format=%B -n 1 $1 | grep -E \"See\\ gh-([0-9]+)\" | awk '{$1=$1};1' | cut -c 8-); \
		git commit -m \"Polish $(git log -1 --pretty='\"%s\"')$(echo \"\\n\\nSee gh-${issue}\")\"; \
	}; f"
